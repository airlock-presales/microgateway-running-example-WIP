apiVersion: microgateway.airlock.com/v1alpha1
kind: AccessControlPolicy
metadata:
  name: webserver
  namespace: oidc
spec:
  targetRefs:
  - group: gateway.networking.k8s.io
    kind: HTTPRoute
    name: webserver

  policies:
  # 0) OIDC tech endpoints: RP must run here
  - requestConditions:
      path:
        matcher:
          regex: ^/(rp-logout|callback)$
    authorization:
      authentication:
        oidc:
          oidcRelyingPartyRef:
            name: webserver-user

  # 1) Protect /user (same RP, admin group)
  - requestConditions:
      path:
        matcher:
          prefix: /user
    authorization:
      requireAll:
      - oidc:
          claim:
            name: groups
            value:
              matcher:
                contains: '<user group object id>'
      authentication:
        oidc:
          oidcRelyingPartyRef:
            name: webserver-user
    identityPropagation:
      onFailure: Pass
      actions:
      - identityPropagationRef: { name: webserver-bearer-token }
      - identityPropagationRef: { name: webserver-name }
      - identityPropagationRef: { name: webserver-email }

  # 2) Protect /admin (same RP, user group)
  - requestConditions:
      path:
        matcher:
          prefix: /admin
    authorization:
      requireAll:
      - oidc:
          claim:
            name: groups
            value:
              matcher:
                contains: '<admin group object id>'
      authentication:
        oidc:
          oidcRelyingPartyRef:
            name: webserver-user
    identityPropagation:
      onFailure: Pass
      actions:
      - identityPropagationRef: { name: webserver-bearer-token }
      - identityPropagationRef: { name: webserver-name }
      - identityPropagationRef: { name: webserver-email }

  # 3) Fallback allow (/, static, /logout.html, etc.)
  - authorization: {}
